
---
  - name: Checking For necessary variables
    fail:
      msg: |
           Please, set the variable offline_token prior to executing this playbook
           ansible-playbook installer_downloader.yml -e "offline_token=xxxxx"
           Acquire your token at https://access.redhat.com/management/api/  ( https://access.redhat.com/articles/3626371 )
    when: offline_token is not defined

  - name: Login to Red Hat APIs
    uri:
      url: 'https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token'
      method: POST
      body_format: form-urlencoded
      body:
        grant_type: refresh_token
        client_id: rhsm-api
        refresh_token: "{{ offline_token }}"
    register: login

  - name: Collecting the available installers
    uri:
      url: 'https://api.access.redhat.com/management/v1/images/cset/{{ aap_version }}'
      method: GET
      return_content: yes
      headers:
        Authorization: "Bearer {{ login.json.access_token }}"
    register: output

  - name: Delete existent installer files
    file:
      path: "{{ lookup('env','PWD') }}/data"
      state: absent
  
  - name: Create installer directory
    file:
      path: "{{ lookup('env','PWD') }}/data"
      state: directory

  - name: reversing downloader list
    set_fact:
      downloader_list: "{{ output.json.body | sort(attribute='imageName', reverse=True) }}"

  - name: Downloading the latest online installer "{{ downloader_list[1].imageName }}"
    get_url:
      url: "https://api.access.redhat.com/management/v1/images/{{ downloader_list[1].checksum }}/download"
      dest: "{{ lookup('env','PWD') }}/data/{{ downloader_list[1].filename }}"
      headers: 
        Authorization: "Bearer {{ login.json.access_token }}"
  
  - name: Downloading the latest bundled installer "{{ downloader_list[0].imageName }}"
    get_url:
      url: "https://api.access.redhat.com/management/v1/images/{{ downloader_list[0].checksum }}/download"
      dest: "{{ lookup('env','PWD') }}/data/{{ downloader_list[0].filename }}"
      headers: 
        Authorization: "Bearer {{ login.json.access_token }}"
  
  - name: Creating symlink for the downloaded files (online installer)
    file:
      src: "{{ lookup('env','PWD') }}/data/{{ downloader_list[1].filename }}"
      dest: "{{ lookup('env','PWD') }}/data/ansible-automation-platform-latest-installer.tar.gz"
      state: link
   
  - name: Creating symlink for the downloaded files (bundled installer)
    file:
      src: "{{ lookup('env','PWD') }}/data/{{ downloader_list[0].filename }}"
      dest: "{{ lookup('env','PWD') }}/data/ansible-automation-platform-latest-bundle-installer.tar.gz"
      state: link
